我走原本要給某個助教 demo，結果那個助教還沒跟我室友 demo 完，又剛好另一個助教 有空，所以我就被叫過去了。demo了半小時，只能說助教好認真辛苦了  \(；；)/ demo分數也有拿滿太感動了


💁🏻‍♂️你做了幾題
🙆🏻‍♀️5

💁🏻‍♂️你replacement 那邊是直接套函式嗎
🙆🏻‍♀️不是，我有改寫，參考了fifo的程式碼

💁🏻‍♂️你跑一次給我看
🙆🏻‍♀️好哇，不過會有一點久喔沒關係嗎⋯⋯（輸指令執行）
💁🏻‍♂️沒關係，不是跑write through應該十分鐘就好
💁🏻‍♀️他昨天跑了半小時…
💁🏻‍♂️好吧那我只好問你很多問題了

💁🏻‍♂️gem主要是在模擬什麼
🙆🏻‍♀️他是模擬全系統，就是整個包含記憶體的電腦架構，但我不太清楚如果這樣的話搭NVMain要幹嘛
💁🏻‍♂️那你說一下mem hierarchy有什麼
🙆🏻‍♀️最上面是register，再來cache，main mem，跟non volatile memory
💁🏻‍♂️對，啊register主要就是CPU那部分。那其實我們non volatile memory都會用什麼來實現
💁🏻‍♀️disk對吧
💁🏻‍♂️對的。NVMain其實就是在用disk那些模擬出main mem，那你覺得gem在整個架構裡主要在模擬什麼呢？
💁🏻‍♀️CPU吧
💁🏻‍♂️恩差不多，啊除了這個以外他還有…（後面我不記得了因為我根本沒注意到這塊，反正就是很多電腦操作就是了）

💁🏻‍♂️（跟另一個助教講）我突然覺得你們都問好少，這樣顯的我問很多
💁🏻‍♀️（os：學長你也知道嗎😭）

💁🏻‍♂️你推薦我們晚餐吃什麼，回答不出來扣你分（x
🙅🏻‍♀️ㄜ….白17？
👩🏻‍💻（其他助教）是訂不到位那間吧QQ
💁🏻‍♂️你沒有成功回答噢！！
🙇🏻‍♀️呃呃呃呃中央沒東西可以吃了😭

💁🏻‍♂️那你給我看一下full way 和2 way下l3的結果，你有用100w跑quicksort嗎
💁🏻‍♀️沒有欸我只有用10w，因為會core dump，不過10w跑得出一點點差別
💁🏻‍♂️你cpu開幾顆啊
💁🏻‍♀️我是用好久之前設的Ubuntu22.04，然後開18.04的container，所以不記得了QWQ
💁🏻‍♂️你知道full way跟2way影響miss rate大概是什麼原因嗎
💁🏻‍♀️就是看associate的數量，太少的話很容易就被replace掉
💁🏻‍♂️還有其他原因嗎，怎麼樣的情況也會很容易換掉
💁🏻‍♀️好像是看cache那些設的大小
💁🏻‍♂️噢那你記得你跑程式的時候用多少記憶體嗎
💁🏻‍♀️是用benchmark裡文字檔案的要求
💁🏻‍♂️對，那個指令就是在設l3那些的大小，啊其實你可以把l3的記憶體設小一點，這樣miss rate就可以跑的比較明顯～

💁🏻‍♂️那你給我看一下你改replacement的程式
💁🏻‍♂️那你是怎麼決定victim的
💁🏻‍♀️如果freq相同就比出現時間遠近
💁🏻‍♂️原本沒有改的時候他有什麼比較嗎
💁🏻‍♀️原本的程式只有在freq小於的時候會換victim
💁🏻‍♂️所以他在等於跟大於的時候沒有？那如果發生情況都不符合if的話不就沒有victim？
💁🏻‍♀️他會預設選擇輸入進來那一堆candidate裡面的第一個

💁🏻‍♂️那你給我看一下你改write through的程式
💁🏻‍♀️（開程式碼）
💁🏻‍♂️對就是這裡，你知道packetptr這個是幹嘛的嗎
💁🏻‍♀️因為gem架構是用packet傳遞
💁🏻‍♂️（指著下面writebacks）這個是做什麼的
💁🏻‍♀️他是個vector吧（？）用來存要寫入的資料，只是我不知道什麼時候會呼叫哪個函數來把這一坨寫進去記憶體
💁🏻‍♂️他確實會在某一個時間呼叫他然後寫入記憶體～

💁🏻‍♂️你覺得full-way、2-way和4-way結果中，4-way會是中間的嗎？
💁🏻‍♀️是吧
💁🏻‍♂️原因呢
💁🏻‍♀️因為 associate 的數量會影響 replacement 的執行，就像是 direct-map 其實就是 1-way，它因為資料衝突時得馬上更換，因此在記憶體讀寫次數受很大的影響。在這些選項裡assoc 數量順序由小到大分別為 2、4、full，所以4-way是中間。

💁🏻‍♂️那你實作之後，lfu跟lru哪個結果比較好？
🙆🏻‍♀️我覺得lru反而比較好
💁🏻‍♂️那你覺得原因是什麼
🙆🏻‍♀️因為傳入的資料出現的頻率沒有說到哪個特別高，所以lfu 這個時候就不適用
💁🏻‍♂️那你可以用quicksort說明一下嗎
💁🏻‍♀️（大概就表示我忘記quicksort在幹嘛🥹）
💁🏻‍♂️欸你是A班的欸，何錦文要哭了喔
💁🏻‍♀️我…可以偷看一下你們benchmark的程式嗎
💁🏻‍♂️好啊
💁🏻‍♀️所以是因為，比方說原本A和B是分別被left、right指標指到且A>B所以換掉，但下一次A又被指到的時候不一定他會因為符合條件而交換，也就是說使用quicksort沒辦法確定他的freq
💁🏻‍♂️對的，啊你雖然分數拿滿了但你要跟何錦文懺悔
🙇🏻‍♀️好😖😖
